1- customprovider → importarlos en app.js

2- click comprar → guardar en customprovider (producto y cantidad en objeto)
dentro del array de productos agregados?

3-customprovider → no debe tener duplicados.
sino la cantidad agregada. 

4-metodos: 
    additem (item, quantity) → FINISH!!!!

    removeitem (itemid) → usa su id  → FINISH (?)
    
    clear () → remover todos los items → FINISH 
    
    esta en carrito (id) → true o false. 

//-------------------------------------------------------
Recuerda que las cantidades se acumulan, 
si borras un producto del carrito debes hacer 
cantidadTotal - productoBorrar.cantidad 

Buscas el prod q exista y q la cantidad sea mayor a 1
Y le haces cantidad -1

-----------------------------------------

El estado de react es inmutable, 
eso quiere decir que no puedes hacer 
modificaciones directas sobre el, 
se tiene que hacer una copia 
de la propiedad que vas a modificar.

--------------------------------------

1-sacar uno de los objetos del array 
2-volver a setearCarrito ("nuevoarraydelcarrito)
3-const copiacarrito = [...carrito]
4-a esta copiacarrito la puedo filtrar o buscar
la cosa que tenga adentro, y eso seteo 

setearCarrito (copiacarrito)
siempre va la copia
nunca va el original

es lo mismo que hacer un slice 
o .map .filter.

//solo borrar un producto del carrito. 

//-----------------------------------------------------

desafio cart view (tutor)

para evitar repetir el carrito en el context verifica si el id del que quieres agregar ya existe con un find, 
si existe usa un indexof para modificar solo la cantidad y si no existe entonces agregalo como uno nuevo

//--------------------------------------------------------

claro, estas haciendo un map, un map siempre te devuelve un array, 
entonces te trae el producto que quieres pero dentro de un array


no hagas un map solo haz por ejemplo const id = producto[0].id y asi con todo para que te quede solo objeto... 
o puedes dejarlo asi, no es comun pero tampoco es que esta mal, si lo cambias a un objeto solo en vez de un objeto
 dentro de array capaz tengas q cambiar como estas manejando el array de carritos porque no seria con arrays 
 dentreo de array si no con objetos


//-------------------------


 /*    
        if (id) {

            const consulta = query (productosCollection, where ("id", "==", Number(id)))

            getDocs (consulta)
                //getdocs → (query) → resultado (querysnapshot)
    
                .then ((resultado) =>{ // querysnapshot // es una promesa.

                    console.log (`esto es un querysnapshot class =`,resultado)
                    //propiedades: 
                    //*docs → aca uso .doc para extraer el array con todos los documentos.
                    //*empty
                    //*metadata
                    //*query 
                    //*size

                    const producto = resultado.docs
                    //representacion (querysnapshot.docs) → resultado Array QueryDocumentSnapShot

                    console.log (`esto es querydocumentsnapshot =`,producto) // → QueryDocumentSnapShot [{...}]]
                    //metodos: 
                    //*data (info)

                    const id = producto[0].id
                    console.log (`esto es el id automatico =`,id) // esto es un string (valor)

                    setItem (producto.data())
                    setLoading (false)                    
                })
    
                .catch ((error) =>{
                    console.log (error)
                })
    
            
            
        } else {
            console.log ("no me muestra detalle")
        }

        */

        //-----------------------------------------------------


         if (id) {
            const consulta = query (productoCollection, where ("id", "==", Number(id)))

            getDocs (consulta)

            
            .then (({docs})=>{ //esto es const docs = resultado.docs

                console.log (`esto es un querydocumentsnapshot con <documentdata> en forma array`, docs)
                setItem (docs.map ((doc)=> ({...doc.data()}))) //docs lo mapeo y saco la data
                setLoading (false)

                
            }) 
            .catch ((error) =>{
                console.log (error)
            })
                } else {
                    console.log ("no hace nada")
                }

        }, [id])

        //--------------------------------------------------------------------------

         if (id) {
            const consulta = query (productoCollection, where ("id", "==", Number(id)))

            getDocs (consulta)
            
                .then ((resultado)=>{
                    const docs = resultado.docs

                    console.log (`esto es un querydocumentsnapshot =`, docs)    
                    //como saco la info de docs, sin que sea una array?????
                    //por ejemplo =>const id = producto[0].id
                    
                    const lista = docs.map ((doc) =>{
                        const id = doc.id
                        const data = doc.data ()

                        const producto = {
                            id:id,
                            ...data
                        }
                        return producto
                    })
                    setItem (lista)
                    setLoading (false)
                })

            .catch ((error) =>{
                console.log (error)
            })

        } else {
            console.log ("no hace nada")
        }


//------------------------------------------------------



import { useState, createContext, useContext } from "react";
export const CartContext = createContext();
export const useCart = () => useContext(CartContext);


---------------------------------
